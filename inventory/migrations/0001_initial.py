# Generated by Django 4.0.4 on 2022-06-01 15:42
from typing import List, Tuple

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies: List[Tuple[str, str]] = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Distributor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('is_service', models.BooleanField(default=False)),
                ('current_stock', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ModifyStockOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now=True)),
                ('quantity', models.FloatField()),
                ('value', models.FloatField()),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stock_changes',
                                           to='inventory.item')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SaleDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now=True)),
                ('total_value', models.FloatField()),
                ('customer',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='inventory.customer')),
                ('items', models.ManyToManyField(to='inventory.modifystockorder')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now=True)),
                ('total_value', models.FloatField()),
                ('distributor',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='inventory.distributor')),
                ('items', models.ManyToManyField(to='inventory.modifystockorder')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ItemGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('group_parent',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_children',
                                   to='inventory.itemgroup')),
            ],
        ),
        migrations.CreateModel(
            name='ItemDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=255, unique=True)),
                ('date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('barcode', models.CharField(max_length=48)),
                ('cost', models.FloatField()),
                ('markup', models.FloatField()),
                ('root_item',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_versions',
                                   to='inventory.item')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='current_detail',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.itemdetail'),
        ),
        migrations.AddField(
            model_name='item',
            name='group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.itemgroup'),
        ),
        migrations.CreateModel(
            name='InventoryDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now=True)),
                ('total_value', models.FloatField()),
                ('kind',
                 models.CharField(choices=[('IVT', 'Inventory'), ('DGD', 'Damaged'), ('LST', 'Lost')], max_length=3)),
                ('items', models.ManyToManyField(to='inventory.modifystockorder')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DistributorItemOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.FloatField()),
                ('distributor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items',
                                                  to='inventory.distributor')),
                ('item',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='distributor_offer',
                                   to='inventory.item')),
            ],
            options={
                'unique_together': {('distributor', 'item')},
            },
        ),
    ]
